** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-logic ALL)
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s2 () Int 0)
[GOOD] (define-fun s6 () Int 1)
[GOOD] (define-fun s131 () Int 10)
[GOOD] ; --- skolem constants ---
[GOOD] (declare-fun s0 () (Seq Int)) ; tracks user variable "ints"
[GOOD] (declare-fun s4 () Int) ; tracks user variable "__internal_sbv_s4"
[GOOD] (declare-fun s15 () Int) ; tracks user variable "__internal_sbv_s15"
[GOOD] (declare-fun s25 () Int) ; tracks user variable "__internal_sbv_s25"
[GOOD] (declare-fun s35 () Int) ; tracks user variable "__internal_sbv_s35"
[GOOD] (declare-fun s45 () Int) ; tracks user variable "__internal_sbv_s45"
[GOOD] (declare-fun s55 () Int) ; tracks user variable "__internal_sbv_s55"
[GOOD] (declare-fun s65 () Int) ; tracks user variable "__internal_sbv_s65"
[GOOD] (declare-fun s75 () Int) ; tracks user variable "__internal_sbv_s75"
[GOOD] (declare-fun s85 () Int) ; tracks user variable "__internal_sbv_s85"
[GOOD] (declare-fun s95 () Int) ; tracks user variable "__internal_sbv_s95"
[GOOD] ; --- constant tables ---
[GOOD] ; --- skolemized tables ---
[GOOD] ; --- arrays ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user given axioms ---
[GOOD] ; --- formula ---
[GOOD] (define-fun s1 () Int (seq.len s0))
[GOOD] (define-fun s3 () Bool (= s1 s2))
[GOOD] (define-fun s5 () (Seq Int) (seq.unit s4))
[GOOD] (define-fun s7 () (Seq Int) (seq.extract s0 s2 s6))
[GOOD] (define-fun s8 () Bool (= s5 s7))
[GOOD] (define-fun s9 () Bool (<= s1 s2))
[GOOD] (define-fun s10 () Bool (or s8 s9))
[GOOD] (define-fun s11 () Int (- s1 s6))
[GOOD] (define-fun s12 () (Seq Int) (seq.extract s0 s6 s11))
[GOOD] (define-fun s13 () Int (seq.len s12))
[GOOD] (define-fun s14 () Bool (= s2 s13))
[GOOD] (define-fun s16 () (Seq Int) (seq.unit s15))
[GOOD] (define-fun s17 () (Seq Int) (seq.extract s12 s2 s6))
[GOOD] (define-fun s18 () Bool (= s16 s17))
[GOOD] (define-fun s19 () Bool (<= s13 s2))
[GOOD] (define-fun s20 () Bool (or s18 s19))
[GOOD] (define-fun s21 () Int (- s13 s6))
[GOOD] (define-fun s22 () (Seq Int) (seq.extract s12 s6 s21))
[GOOD] (define-fun s23 () Int (seq.len s22))
[GOOD] (define-fun s24 () Bool (= s2 s23))
[GOOD] (define-fun s26 () (Seq Int) (seq.unit s25))
[GOOD] (define-fun s27 () (Seq Int) (seq.extract s22 s2 s6))
[GOOD] (define-fun s28 () Bool (= s26 s27))
[GOOD] (define-fun s29 () Bool (<= s23 s2))
[GOOD] (define-fun s30 () Bool (or s28 s29))
[GOOD] (define-fun s31 () Int (- s23 s6))
[GOOD] (define-fun s32 () (Seq Int) (seq.extract s22 s6 s31))
[GOOD] (define-fun s33 () Int (seq.len s32))
[GOOD] (define-fun s34 () Bool (= s2 s33))
[GOOD] (define-fun s36 () (Seq Int) (seq.unit s35))
[GOOD] (define-fun s37 () (Seq Int) (seq.extract s32 s2 s6))
[GOOD] (define-fun s38 () Bool (= s36 s37))
[GOOD] (define-fun s39 () Bool (<= s33 s2))
[GOOD] (define-fun s40 () Bool (or s38 s39))
[GOOD] (define-fun s41 () Int (- s33 s6))
[GOOD] (define-fun s42 () (Seq Int) (seq.extract s32 s6 s41))
[GOOD] (define-fun s43 () Int (seq.len s42))
[GOOD] (define-fun s44 () Bool (= s2 s43))
[GOOD] (define-fun s46 () (Seq Int) (seq.unit s45))
[GOOD] (define-fun s47 () (Seq Int) (seq.extract s42 s2 s6))
[GOOD] (define-fun s48 () Bool (= s46 s47))
[GOOD] (define-fun s49 () Bool (<= s43 s2))
[GOOD] (define-fun s50 () Bool (or s48 s49))
[GOOD] (define-fun s51 () Int (- s43 s6))
[GOOD] (define-fun s52 () (Seq Int) (seq.extract s42 s6 s51))
[GOOD] (define-fun s53 () Int (seq.len s52))
[GOOD] (define-fun s54 () Bool (= s2 s53))
[GOOD] (define-fun s56 () (Seq Int) (seq.unit s55))
[GOOD] (define-fun s57 () (Seq Int) (seq.extract s52 s2 s6))
[GOOD] (define-fun s58 () Bool (= s56 s57))
[GOOD] (define-fun s59 () Bool (<= s53 s2))
[GOOD] (define-fun s60 () Bool (or s58 s59))
[GOOD] (define-fun s61 () Int (- s53 s6))
[GOOD] (define-fun s62 () (Seq Int) (seq.extract s52 s6 s61))
[GOOD] (define-fun s63 () Int (seq.len s62))
[GOOD] (define-fun s64 () Bool (= s2 s63))
[GOOD] (define-fun s66 () (Seq Int) (seq.unit s65))
[GOOD] (define-fun s67 () (Seq Int) (seq.extract s62 s2 s6))
[GOOD] (define-fun s68 () Bool (= s66 s67))
[GOOD] (define-fun s69 () Bool (<= s63 s2))
[GOOD] (define-fun s70 () Bool (or s68 s69))
[GOOD] (define-fun s71 () Int (- s63 s6))
[GOOD] (define-fun s72 () (Seq Int) (seq.extract s62 s6 s71))
[GOOD] (define-fun s73 () Int (seq.len s72))
[GOOD] (define-fun s74 () Bool (= s2 s73))
[GOOD] (define-fun s76 () (Seq Int) (seq.unit s75))
[GOOD] (define-fun s77 () (Seq Int) (seq.extract s72 s2 s6))
[GOOD] (define-fun s78 () Bool (= s76 s77))
[GOOD] (define-fun s79 () Bool (<= s73 s2))
[GOOD] (define-fun s80 () Bool (or s78 s79))
[GOOD] (define-fun s81 () Int (- s73 s6))
[GOOD] (define-fun s82 () (Seq Int) (seq.extract s72 s6 s81))
[GOOD] (define-fun s83 () Int (seq.len s82))
[GOOD] (define-fun s84 () Bool (= s2 s83))
[GOOD] (define-fun s86 () (Seq Int) (seq.unit s85))
[GOOD] (define-fun s87 () (Seq Int) (seq.extract s82 s2 s6))
[GOOD] (define-fun s88 () Bool (= s86 s87))
[GOOD] (define-fun s89 () Bool (<= s83 s2))
[GOOD] (define-fun s90 () Bool (or s88 s89))
[GOOD] (define-fun s91 () Int (- s83 s6))
[GOOD] (define-fun s92 () (Seq Int) (seq.extract s82 s6 s91))
[GOOD] (define-fun s93 () Int (seq.len s92))
[GOOD] (define-fun s94 () Bool (= s2 s93))
[GOOD] (define-fun s96 () (Seq Int) (seq.unit s95))
[GOOD] (define-fun s97 () (Seq Int) (seq.extract s92 s2 s6))
[GOOD] (define-fun s98 () Bool (= s96 s97))
[GOOD] (define-fun s99 () Bool (<= s93 s2))
[GOOD] (define-fun s100 () Bool (or s98 s99))
[GOOD] (define-fun s101 () Bool (<= s95 s2))
[GOOD] (define-fun s102 () Int (ite s101 s2 s95))
[GOOD] (define-fun s103 () Int (ite s94 s2 s102))
[GOOD] (define-fun s104 () Bool (<= s85 s103))
[GOOD] (define-fun s105 () Int (ite s104 s103 s85))
[GOOD] (define-fun s106 () Int (ite s84 s2 s105))
[GOOD] (define-fun s107 () Bool (<= s75 s106))
[GOOD] (define-fun s108 () Int (ite s107 s106 s75))
[GOOD] (define-fun s109 () Int (ite s74 s2 s108))
[GOOD] (define-fun s110 () Bool (<= s65 s109))
[GOOD] (define-fun s111 () Int (ite s110 s109 s65))
[GOOD] (define-fun s112 () Int (ite s64 s2 s111))
[GOOD] (define-fun s113 () Bool (<= s55 s112))
[GOOD] (define-fun s114 () Int (ite s113 s112 s55))
[GOOD] (define-fun s115 () Int (ite s54 s2 s114))
[GOOD] (define-fun s116 () Bool (<= s45 s115))
[GOOD] (define-fun s117 () Int (ite s116 s115 s45))
[GOOD] (define-fun s118 () Int (ite s44 s2 s117))
[GOOD] (define-fun s119 () Bool (<= s35 s118))
[GOOD] (define-fun s120 () Int (ite s119 s118 s35))
[GOOD] (define-fun s121 () Int (ite s34 s2 s120))
[GOOD] (define-fun s122 () Bool (<= s25 s121))
[GOOD] (define-fun s123 () Int (ite s122 s121 s25))
[GOOD] (define-fun s124 () Int (ite s24 s2 s123))
[GOOD] (define-fun s125 () Bool (<= s15 s124))
[GOOD] (define-fun s126 () Int (ite s125 s124 s15))
[GOOD] (define-fun s127 () Int (ite s14 s2 s126))
[GOOD] (define-fun s128 () Bool (<= s4 s127))
[GOOD] (define-fun s129 () Int (ite s128 s127 s4))
[GOOD] (define-fun s130 () Int (ite s3 s2 s129))
[GOOD] (define-fun s132 () Bool (> s130 s131))
[GOOD] (define-fun s133 () Bool (not s132))
[GOOD] (define-fun s134 () Bool (< s95 s2))
[GOOD] (define-fun s135 () Bool (> s95 s131))
[GOOD] (define-fun s136 () Bool (or s134 s135))
[GOOD] (define-fun s137 () Bool (not s94))
[GOOD] (define-fun s138 () Bool (and s136 s137))
[GOOD] (define-fun s139 () Bool (< s85 s2))
[GOOD] (define-fun s140 () Bool (> s85 s131))
[GOOD] (define-fun s141 () Bool (or s139 s140))
[GOOD] (define-fun s142 () Bool (or s138 s141))
[GOOD] (define-fun s143 () Bool (not s84))
[GOOD] (define-fun s144 () Bool (and s142 s143))
[GOOD] (define-fun s145 () Bool (< s75 s2))
[GOOD] (define-fun s146 () Bool (> s75 s131))
[GOOD] (define-fun s147 () Bool (or s145 s146))
[GOOD] (define-fun s148 () Bool (or s144 s147))
[GOOD] (define-fun s149 () Bool (not s74))
[GOOD] (define-fun s150 () Bool (and s148 s149))
[GOOD] (define-fun s151 () Bool (< s65 s2))
[GOOD] (define-fun s152 () Bool (> s65 s131))
[GOOD] (define-fun s153 () Bool (or s151 s152))
[GOOD] (define-fun s154 () Bool (or s150 s153))
[GOOD] (define-fun s155 () Bool (not s64))
[GOOD] (define-fun s156 () Bool (and s154 s155))
[GOOD] (define-fun s157 () Bool (< s55 s2))
[GOOD] (define-fun s158 () Bool (> s55 s131))
[GOOD] (define-fun s159 () Bool (or s157 s158))
[GOOD] (define-fun s160 () Bool (or s156 s159))
[GOOD] (define-fun s161 () Bool (not s54))
[GOOD] (define-fun s162 () Bool (and s160 s161))
[GOOD] (define-fun s163 () Bool (< s45 s2))
[GOOD] (define-fun s164 () Bool (> s45 s131))
[GOOD] (define-fun s165 () Bool (or s163 s164))
[GOOD] (define-fun s166 () Bool (or s162 s165))
[GOOD] (define-fun s167 () Bool (not s44))
[GOOD] (define-fun s168 () Bool (and s166 s167))
[GOOD] (define-fun s169 () Bool (< s35 s2))
[GOOD] (define-fun s170 () Bool (> s35 s131))
[GOOD] (define-fun s171 () Bool (or s169 s170))
[GOOD] (define-fun s172 () Bool (or s168 s171))
[GOOD] (define-fun s173 () Bool (not s34))
[GOOD] (define-fun s174 () Bool (and s172 s173))
[GOOD] (define-fun s175 () Bool (< s25 s2))
[GOOD] (define-fun s176 () Bool (> s25 s131))
[GOOD] (define-fun s177 () Bool (or s175 s176))
[GOOD] (define-fun s178 () Bool (or s174 s177))
[GOOD] (define-fun s179 () Bool (not s24))
[GOOD] (define-fun s180 () Bool (and s178 s179))
[GOOD] (define-fun s181 () Bool (< s15 s2))
[GOOD] (define-fun s182 () Bool (> s15 s131))
[GOOD] (define-fun s183 () Bool (or s181 s182))
[GOOD] (define-fun s184 () Bool (or s180 s183))
[GOOD] (define-fun s185 () Bool (not s14))
[GOOD] (define-fun s186 () Bool (and s184 s185))
[GOOD] (define-fun s187 () Bool (< s4 s2))
[GOOD] (define-fun s188 () Bool (> s4 s131))
[GOOD] (define-fun s189 () Bool (or s187 s188))
[GOOD] (define-fun s190 () Bool (or s186 s189))
[GOOD] (define-fun s191 () Bool (not s3))
[GOOD] (define-fun s192 () Bool (and s190 s191))
[GOOD] (define-fun s193 () Bool (or s133 s192))
[GOOD] (assert s10)
[GOOD] (assert s20)
[GOOD] (assert s30)
[GOOD] (assert s40)
[GOOD] (assert s50)
[GOOD] (assert s60)
[GOOD] (assert s70)
[GOOD] (assert s80)
[GOOD] (assert s90)
[GOOD] (assert s100)
[GOOD] (assert s193)
[SEND] (check-sat)
[RECV] sat
*** Solver   : Z3
*** Exit code: ExitSuccess
