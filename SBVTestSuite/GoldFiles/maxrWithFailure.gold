** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-logic ALL)
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s_2 () Bool false)
[GOOD] (define-fun s_1 () Bool true)
[GOOD] (define-fun s3 () Int 0)
[GOOD] (define-fun s9 () Int 1)
[GOOD] (define-fun s142 () Int 10)
[GOOD] (define-fun s1 () (Seq Int) (as seq.empty (Seq Int)))
[GOOD] ; --- skolem constants ---
[GOOD] (declare-fun s0 () (Seq Int)) ; tracks user variable "ints"
[GOOD] (declare-fun s4 () Int) ; tracks user variable "__internal_sbv_s4"
[GOOD] (declare-fun s16 () Int) ; tracks user variable "__internal_sbv_s16"
[GOOD] (declare-fun s27 () Int) ; tracks user variable "__internal_sbv_s27"
[GOOD] (declare-fun s38 () Int) ; tracks user variable "__internal_sbv_s38"
[GOOD] (declare-fun s49 () Int) ; tracks user variable "__internal_sbv_s49"
[GOOD] (declare-fun s60 () Int) ; tracks user variable "__internal_sbv_s60"
[GOOD] (declare-fun s71 () Int) ; tracks user variable "__internal_sbv_s71"
[GOOD] (declare-fun s82 () Int) ; tracks user variable "__internal_sbv_s82"
[GOOD] (declare-fun s93 () Int) ; tracks user variable "__internal_sbv_s93"
[GOOD] (declare-fun s104 () Int) ; tracks user variable "__internal_sbv_s104"
[GOOD] ; --- constant tables ---
[GOOD] ; --- skolemized tables ---
[GOOD] ; --- arrays ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user given axioms ---
[GOOD] ; --- formula ---
[GOOD] (define-fun s2 () Bool (= s0 s1))
[GOOD] (define-fun s5 () (Seq Int) (seq.unit s4))
[GOOD] (define-fun s6 () Int (seq.len s0))
[GOOD] (define-fun s7 () Bool (> s6 s3))
[GOOD] (define-fun s8 () Bool (not s7))
[GOOD] (define-fun s10 () (Seq Int) (seq.extract s0 s3 s9))
[GOOD] (define-fun s11 () Bool (= s5 s10))
[GOOD] (define-fun s12 () Bool (or s8 s11))
[GOOD] (define-fun s13 () Int (- s6 s9))
[GOOD] (define-fun s14 () (Seq Int) (seq.extract s0 s9 s13))
[GOOD] (define-fun s15 () Bool (= s1 s14))
[GOOD] (define-fun s17 () (Seq Int) (seq.unit s16))
[GOOD] (define-fun s18 () Int (seq.len s14))
[GOOD] (define-fun s19 () Bool (> s18 s3))
[GOOD] (define-fun s20 () Bool (not s19))
[GOOD] (define-fun s21 () (Seq Int) (seq.extract s14 s3 s9))
[GOOD] (define-fun s22 () Bool (= s17 s21))
[GOOD] (define-fun s23 () Bool (or s20 s22))
[GOOD] (define-fun s24 () Int (- s18 s9))
[GOOD] (define-fun s25 () (Seq Int) (seq.extract s14 s9 s24))
[GOOD] (define-fun s26 () Bool (= s1 s25))
[GOOD] (define-fun s28 () (Seq Int) (seq.unit s27))
[GOOD] (define-fun s29 () Int (seq.len s25))
[GOOD] (define-fun s30 () Bool (> s29 s3))
[GOOD] (define-fun s31 () Bool (not s30))
[GOOD] (define-fun s32 () (Seq Int) (seq.extract s25 s3 s9))
[GOOD] (define-fun s33 () Bool (= s28 s32))
[GOOD] (define-fun s34 () Bool (or s31 s33))
[GOOD] (define-fun s35 () Int (- s29 s9))
[GOOD] (define-fun s36 () (Seq Int) (seq.extract s25 s9 s35))
[GOOD] (define-fun s37 () Bool (= s1 s36))
[GOOD] (define-fun s39 () (Seq Int) (seq.unit s38))
[GOOD] (define-fun s40 () Int (seq.len s36))
[GOOD] (define-fun s41 () Bool (> s40 s3))
[GOOD] (define-fun s42 () Bool (not s41))
[GOOD] (define-fun s43 () (Seq Int) (seq.extract s36 s3 s9))
[GOOD] (define-fun s44 () Bool (= s39 s43))
[GOOD] (define-fun s45 () Bool (or s42 s44))
[GOOD] (define-fun s46 () Int (- s40 s9))
[GOOD] (define-fun s47 () (Seq Int) (seq.extract s36 s9 s46))
[GOOD] (define-fun s48 () Bool (= s1 s47))
[GOOD] (define-fun s50 () (Seq Int) (seq.unit s49))
[GOOD] (define-fun s51 () Int (seq.len s47))
[GOOD] (define-fun s52 () Bool (> s51 s3))
[GOOD] (define-fun s53 () Bool (not s52))
[GOOD] (define-fun s54 () (Seq Int) (seq.extract s47 s3 s9))
[GOOD] (define-fun s55 () Bool (= s50 s54))
[GOOD] (define-fun s56 () Bool (or s53 s55))
[GOOD] (define-fun s57 () Int (- s51 s9))
[GOOD] (define-fun s58 () (Seq Int) (seq.extract s47 s9 s57))
[GOOD] (define-fun s59 () Bool (= s1 s58))
[GOOD] (define-fun s61 () (Seq Int) (seq.unit s60))
[GOOD] (define-fun s62 () Int (seq.len s58))
[GOOD] (define-fun s63 () Bool (> s62 s3))
[GOOD] (define-fun s64 () Bool (not s63))
[GOOD] (define-fun s65 () (Seq Int) (seq.extract s58 s3 s9))
[GOOD] (define-fun s66 () Bool (= s61 s65))
[GOOD] (define-fun s67 () Bool (or s64 s66))
[GOOD] (define-fun s68 () Int (- s62 s9))
[GOOD] (define-fun s69 () (Seq Int) (seq.extract s58 s9 s68))
[GOOD] (define-fun s70 () Bool (= s1 s69))
[GOOD] (define-fun s72 () (Seq Int) (seq.unit s71))
[GOOD] (define-fun s73 () Int (seq.len s69))
[GOOD] (define-fun s74 () Bool (> s73 s3))
[GOOD] (define-fun s75 () Bool (not s74))
[GOOD] (define-fun s76 () (Seq Int) (seq.extract s69 s3 s9))
[GOOD] (define-fun s77 () Bool (= s72 s76))
[GOOD] (define-fun s78 () Bool (or s75 s77))
[GOOD] (define-fun s79 () Int (- s73 s9))
[GOOD] (define-fun s80 () (Seq Int) (seq.extract s69 s9 s79))
[GOOD] (define-fun s81 () Bool (= s1 s80))
[GOOD] (define-fun s83 () (Seq Int) (seq.unit s82))
[GOOD] (define-fun s84 () Int (seq.len s80))
[GOOD] (define-fun s85 () Bool (> s84 s3))
[GOOD] (define-fun s86 () Bool (not s85))
[GOOD] (define-fun s87 () (Seq Int) (seq.extract s80 s3 s9))
[GOOD] (define-fun s88 () Bool (= s83 s87))
[GOOD] (define-fun s89 () Bool (or s86 s88))
[GOOD] (define-fun s90 () Int (- s84 s9))
[GOOD] (define-fun s91 () (Seq Int) (seq.extract s80 s9 s90))
[GOOD] (define-fun s92 () Bool (= s1 s91))
[GOOD] (define-fun s94 () (Seq Int) (seq.unit s93))
[GOOD] (define-fun s95 () Int (seq.len s91))
[GOOD] (define-fun s96 () Bool (> s95 s3))
[GOOD] (define-fun s97 () Bool (not s96))
[GOOD] (define-fun s98 () (Seq Int) (seq.extract s91 s3 s9))
[GOOD] (define-fun s99 () Bool (= s94 s98))
[GOOD] (define-fun s100 () Bool (or s97 s99))
[GOOD] (define-fun s101 () Int (- s95 s9))
[GOOD] (define-fun s102 () (Seq Int) (seq.extract s91 s9 s101))
[GOOD] (define-fun s103 () Bool (= s1 s102))
[GOOD] (define-fun s105 () (Seq Int) (seq.unit s104))
[GOOD] (define-fun s106 () Int (seq.len s102))
[GOOD] (define-fun s107 () Bool (> s106 s3))
[GOOD] (define-fun s108 () Bool (not s107))
[GOOD] (define-fun s109 () (Seq Int) (seq.extract s102 s3 s9))
[GOOD] (define-fun s110 () Bool (= s105 s109))
[GOOD] (define-fun s111 () Bool (or s108 s110))
[GOOD] (define-fun s112 () Bool (<= s104 s3))
[GOOD] (define-fun s113 () Int (ite s112 s3 s104))
[GOOD] (define-fun s114 () Int (ite s103 s3 s113))
[GOOD] (define-fun s115 () Bool (<= s93 s114))
[GOOD] (define-fun s116 () Int (ite s115 s114 s93))
[GOOD] (define-fun s117 () Int (ite s92 s3 s116))
[GOOD] (define-fun s118 () Bool (<= s82 s117))
[GOOD] (define-fun s119 () Int (ite s118 s117 s82))
[GOOD] (define-fun s120 () Int (ite s81 s3 s119))
[GOOD] (define-fun s121 () Bool (<= s71 s120))
[GOOD] (define-fun s122 () Int (ite s121 s120 s71))
[GOOD] (define-fun s123 () Int (ite s70 s3 s122))
[GOOD] (define-fun s124 () Bool (<= s60 s123))
[GOOD] (define-fun s125 () Int (ite s124 s123 s60))
[GOOD] (define-fun s126 () Int (ite s59 s3 s125))
[GOOD] (define-fun s127 () Bool (<= s49 s126))
[GOOD] (define-fun s128 () Int (ite s127 s126 s49))
[GOOD] (define-fun s129 () Int (ite s48 s3 s128))
[GOOD] (define-fun s130 () Bool (<= s38 s129))
[GOOD] (define-fun s131 () Int (ite s130 s129 s38))
[GOOD] (define-fun s132 () Int (ite s37 s3 s131))
[GOOD] (define-fun s133 () Bool (<= s27 s132))
[GOOD] (define-fun s134 () Int (ite s133 s132 s27))
[GOOD] (define-fun s135 () Int (ite s26 s3 s134))
[GOOD] (define-fun s136 () Bool (<= s16 s135))
[GOOD] (define-fun s137 () Int (ite s136 s135 s16))
[GOOD] (define-fun s138 () Int (ite s15 s3 s137))
[GOOD] (define-fun s139 () Bool (<= s4 s138))
[GOOD] (define-fun s140 () Int (ite s139 s138 s4))
[GOOD] (define-fun s141 () Int (ite s2 s3 s140))
[GOOD] (define-fun s143 () Bool (> s141 s142))
[GOOD] (define-fun s144 () Bool (not s143))
[GOOD] (define-fun s145 () Bool (< s104 s3))
[GOOD] (define-fun s146 () Bool (> s104 s142))
[GOOD] (define-fun s147 () Bool (or s145 s146))
[GOOD] (define-fun s148 () Bool (ite s103 s_2 s147))
[GOOD] (define-fun s149 () Bool (< s93 s3))
[GOOD] (define-fun s150 () Bool (> s93 s142))
[GOOD] (define-fun s151 () Bool (or s149 s150))
[GOOD] (define-fun s152 () Bool (or s148 s151))
[GOOD] (define-fun s153 () Bool (ite s92 s_2 s152))
[GOOD] (define-fun s154 () Bool (< s82 s3))
[GOOD] (define-fun s155 () Bool (> s82 s142))
[GOOD] (define-fun s156 () Bool (or s154 s155))
[GOOD] (define-fun s157 () Bool (or s153 s156))
[GOOD] (define-fun s158 () Bool (ite s81 s_2 s157))
[GOOD] (define-fun s159 () Bool (< s71 s3))
[GOOD] (define-fun s160 () Bool (> s71 s142))
[GOOD] (define-fun s161 () Bool (or s159 s160))
[GOOD] (define-fun s162 () Bool (or s158 s161))
[GOOD] (define-fun s163 () Bool (ite s70 s_2 s162))
[GOOD] (define-fun s164 () Bool (< s60 s3))
[GOOD] (define-fun s165 () Bool (> s60 s142))
[GOOD] (define-fun s166 () Bool (or s164 s165))
[GOOD] (define-fun s167 () Bool (or s163 s166))
[GOOD] (define-fun s168 () Bool (ite s59 s_2 s167))
[GOOD] (define-fun s169 () Bool (< s49 s3))
[GOOD] (define-fun s170 () Bool (> s49 s142))
[GOOD] (define-fun s171 () Bool (or s169 s170))
[GOOD] (define-fun s172 () Bool (or s168 s171))
[GOOD] (define-fun s173 () Bool (ite s48 s_2 s172))
[GOOD] (define-fun s174 () Bool (< s38 s3))
[GOOD] (define-fun s175 () Bool (> s38 s142))
[GOOD] (define-fun s176 () Bool (or s174 s175))
[GOOD] (define-fun s177 () Bool (or s173 s176))
[GOOD] (define-fun s178 () Bool (ite s37 s_2 s177))
[GOOD] (define-fun s179 () Bool (< s27 s3))
[GOOD] (define-fun s180 () Bool (> s27 s142))
[GOOD] (define-fun s181 () Bool (or s179 s180))
[GOOD] (define-fun s182 () Bool (or s178 s181))
[GOOD] (define-fun s183 () Bool (ite s26 s_2 s182))
[GOOD] (define-fun s184 () Bool (< s16 s3))
[GOOD] (define-fun s185 () Bool (> s16 s142))
[GOOD] (define-fun s186 () Bool (or s184 s185))
[GOOD] (define-fun s187 () Bool (or s183 s186))
[GOOD] (define-fun s188 () Bool (ite s15 s_2 s187))
[GOOD] (define-fun s189 () Bool (< s4 s3))
[GOOD] (define-fun s190 () Bool (> s4 s142))
[GOOD] (define-fun s191 () Bool (or s189 s190))
[GOOD] (define-fun s192 () Bool (or s188 s191))
[GOOD] (define-fun s193 () Bool (ite s2 s_2 s192))
[GOOD] (define-fun s194 () Bool (or s144 s193))
[GOOD] (assert s12)
[GOOD] (assert s23)
[GOOD] (assert s34)
[GOOD] (assert s45)
[GOOD] (assert s56)
[GOOD] (assert s67)
[GOOD] (assert s78)
[GOOD] (assert s89)
[GOOD] (assert s100)
[GOOD] (assert s111)
[GOOD] (assert s194)
[SEND] (check-sat)
[RECV] sat
*** Solver   : Z3
*** Exit code: ExitSuccess
