** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-logic ALL)
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s3 () Int 0)
[GOOD] (define-fun s4 () Int 1)
[GOOD] (define-fun s142 () Int 10)
[GOOD] (define-fun s1 () (Seq Int) (as seq.empty (Seq Int)))
[GOOD] ; --- skolem constants ---
[GOOD] (declare-fun s0 () (Seq Int)) ; tracks user variable "ints"
[GOOD] (declare-fun s9 () Int) ; tracks user variable "__internal_sbv_s9"
[GOOD] (declare-fun s22 () Int) ; tracks user variable "__internal_sbv_s22"
[GOOD] (declare-fun s35 () Int) ; tracks user variable "__internal_sbv_s35"
[GOOD] (declare-fun s48 () Int) ; tracks user variable "__internal_sbv_s48"
[GOOD] (declare-fun s61 () Int) ; tracks user variable "__internal_sbv_s61"
[GOOD] (declare-fun s74 () Int) ; tracks user variable "__internal_sbv_s74"
[GOOD] (declare-fun s87 () Int) ; tracks user variable "__internal_sbv_s87"
[GOOD] (declare-fun s100 () Int) ; tracks user variable "__internal_sbv_s100"
[GOOD] (declare-fun s113 () Int) ; tracks user variable "__internal_sbv_s113"
[GOOD] (declare-fun s122 () Int) ; tracks user variable "__internal_sbv_s122"
[GOOD] ; --- constant tables ---
[GOOD] ; --- skolemized tables ---
[GOOD] ; --- arrays ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user given axioms ---
[GOOD] ; --- formula ---
[GOOD] (define-fun s2 () Bool (= s0 s1))
[GOOD] (define-fun s5 () Int (seq.len s0))
[GOOD] (define-fun s6 () Int (- s5 s4))
[GOOD] (define-fun s7 () (Seq Int) (seq.extract s0 s4 s6))
[GOOD] (define-fun s8 () Bool (= s1 s7))
[GOOD] (define-fun s10 () (Seq Int) (seq.unit s9))
[GOOD] (define-fun s11 () Bool (> s5 s3))
[GOOD] (define-fun s12 () Bool (not s11))
[GOOD] (define-fun s13 () (Seq Int) (seq.extract s0 s3 s4))
[GOOD] (define-fun s14 () Bool (= s10 s13))
[GOOD] (define-fun s15 () Bool (or s12 s14))
[GOOD] (define-fun s16 () Bool (<= s9 s3))
[GOOD] (define-fun s17 () Int (ite s16 s3 s9))
[GOOD] (define-fun s18 () Int (seq.len s7))
[GOOD] (define-fun s19 () Int (- s18 s4))
[GOOD] (define-fun s20 () (Seq Int) (seq.extract s7 s4 s19))
[GOOD] (define-fun s21 () Bool (= s1 s20))
[GOOD] (define-fun s23 () (Seq Int) (seq.unit s22))
[GOOD] (define-fun s24 () Bool (> s18 s3))
[GOOD] (define-fun s25 () Bool (not s24))
[GOOD] (define-fun s26 () (Seq Int) (seq.extract s7 s3 s4))
[GOOD] (define-fun s27 () Bool (= s23 s26))
[GOOD] (define-fun s28 () Bool (or s25 s27))
[GOOD] (define-fun s29 () Bool (<= s22 s17))
[GOOD] (define-fun s30 () Int (ite s29 s17 s22))
[GOOD] (define-fun s31 () Int (seq.len s20))
[GOOD] (define-fun s32 () Int (- s31 s4))
[GOOD] (define-fun s33 () (Seq Int) (seq.extract s20 s4 s32))
[GOOD] (define-fun s34 () Bool (= s1 s33))
[GOOD] (define-fun s36 () (Seq Int) (seq.unit s35))
[GOOD] (define-fun s37 () Bool (> s31 s3))
[GOOD] (define-fun s38 () Bool (not s37))
[GOOD] (define-fun s39 () (Seq Int) (seq.extract s20 s3 s4))
[GOOD] (define-fun s40 () Bool (= s36 s39))
[GOOD] (define-fun s41 () Bool (or s38 s40))
[GOOD] (define-fun s42 () Bool (<= s35 s30))
[GOOD] (define-fun s43 () Int (ite s42 s30 s35))
[GOOD] (define-fun s44 () Int (seq.len s33))
[GOOD] (define-fun s45 () Int (- s44 s4))
[GOOD] (define-fun s46 () (Seq Int) (seq.extract s33 s4 s45))
[GOOD] (define-fun s47 () Bool (= s1 s46))
[GOOD] (define-fun s49 () (Seq Int) (seq.unit s48))
[GOOD] (define-fun s50 () Bool (> s44 s3))
[GOOD] (define-fun s51 () Bool (not s50))
[GOOD] (define-fun s52 () (Seq Int) (seq.extract s33 s3 s4))
[GOOD] (define-fun s53 () Bool (= s49 s52))
[GOOD] (define-fun s54 () Bool (or s51 s53))
[GOOD] (define-fun s55 () Bool (<= s48 s43))
[GOOD] (define-fun s56 () Int (ite s55 s43 s48))
[GOOD] (define-fun s57 () Int (seq.len s46))
[GOOD] (define-fun s58 () Int (- s57 s4))
[GOOD] (define-fun s59 () (Seq Int) (seq.extract s46 s4 s58))
[GOOD] (define-fun s60 () Bool (= s1 s59))
[GOOD] (define-fun s62 () (Seq Int) (seq.unit s61))
[GOOD] (define-fun s63 () Bool (> s57 s3))
[GOOD] (define-fun s64 () Bool (not s63))
[GOOD] (define-fun s65 () (Seq Int) (seq.extract s46 s3 s4))
[GOOD] (define-fun s66 () Bool (= s62 s65))
[GOOD] (define-fun s67 () Bool (or s64 s66))
[GOOD] (define-fun s68 () Bool (<= s61 s56))
[GOOD] (define-fun s69 () Int (ite s68 s56 s61))
[GOOD] (define-fun s70 () Int (seq.len s59))
[GOOD] (define-fun s71 () Int (- s70 s4))
[GOOD] (define-fun s72 () (Seq Int) (seq.extract s59 s4 s71))
[GOOD] (define-fun s73 () Bool (= s1 s72))
[GOOD] (define-fun s75 () (Seq Int) (seq.unit s74))
[GOOD] (define-fun s76 () Bool (> s70 s3))
[GOOD] (define-fun s77 () Bool (not s76))
[GOOD] (define-fun s78 () (Seq Int) (seq.extract s59 s3 s4))
[GOOD] (define-fun s79 () Bool (= s75 s78))
[GOOD] (define-fun s80 () Bool (or s77 s79))
[GOOD] (define-fun s81 () Bool (<= s74 s69))
[GOOD] (define-fun s82 () Int (ite s81 s69 s74))
[GOOD] (define-fun s83 () Int (seq.len s72))
[GOOD] (define-fun s84 () Int (- s83 s4))
[GOOD] (define-fun s85 () (Seq Int) (seq.extract s72 s4 s84))
[GOOD] (define-fun s86 () Bool (= s1 s85))
[GOOD] (define-fun s88 () (Seq Int) (seq.unit s87))
[GOOD] (define-fun s89 () Bool (> s83 s3))
[GOOD] (define-fun s90 () Bool (not s89))
[GOOD] (define-fun s91 () (Seq Int) (seq.extract s72 s3 s4))
[GOOD] (define-fun s92 () Bool (= s88 s91))
[GOOD] (define-fun s93 () Bool (or s90 s92))
[GOOD] (define-fun s94 () Bool (<= s87 s82))
[GOOD] (define-fun s95 () Int (ite s94 s82 s87))
[GOOD] (define-fun s96 () Int (seq.len s85))
[GOOD] (define-fun s97 () Int (- s96 s4))
[GOOD] (define-fun s98 () (Seq Int) (seq.extract s85 s4 s97))
[GOOD] (define-fun s99 () Bool (= s1 s98))
[GOOD] (define-fun s101 () (Seq Int) (seq.unit s100))
[GOOD] (define-fun s102 () Bool (> s96 s3))
[GOOD] (define-fun s103 () Bool (not s102))
[GOOD] (define-fun s104 () (Seq Int) (seq.extract s85 s3 s4))
[GOOD] (define-fun s105 () Bool (= s101 s104))
[GOOD] (define-fun s106 () Bool (or s103 s105))
[GOOD] (define-fun s107 () Bool (<= s100 s95))
[GOOD] (define-fun s108 () Int (ite s107 s95 s100))
[GOOD] (define-fun s109 () Int (seq.len s98))
[GOOD] (define-fun s110 () Int (- s109 s4))
[GOOD] (define-fun s111 () (Seq Int) (seq.extract s98 s4 s110))
[GOOD] (define-fun s112 () Bool (= s1 s111))
[GOOD] (define-fun s114 () (Seq Int) (seq.unit s113))
[GOOD] (define-fun s115 () Bool (> s109 s3))
[GOOD] (define-fun s116 () Bool (not s115))
[GOOD] (define-fun s117 () (Seq Int) (seq.extract s98 s3 s4))
[GOOD] (define-fun s118 () Bool (= s114 s117))
[GOOD] (define-fun s119 () Bool (or s116 s118))
[GOOD] (define-fun s120 () Bool (<= s113 s108))
[GOOD] (define-fun s121 () Int (ite s120 s108 s113))
[GOOD] (define-fun s123 () (Seq Int) (seq.unit s122))
[GOOD] (define-fun s124 () Int (seq.len s111))
[GOOD] (define-fun s125 () Bool (> s124 s3))
[GOOD] (define-fun s126 () Bool (not s125))
[GOOD] (define-fun s127 () (Seq Int) (seq.extract s111 s3 s4))
[GOOD] (define-fun s128 () Bool (= s123 s127))
[GOOD] (define-fun s129 () Bool (or s126 s128))
[GOOD] (define-fun s130 () Bool (<= s122 s121))
[GOOD] (define-fun s131 () Int (ite s130 s121 s122))
[GOOD] (define-fun s132 () Int (ite s112 s121 s131))
[GOOD] (define-fun s133 () Int (ite s99 s108 s132))
[GOOD] (define-fun s134 () Int (ite s86 s95 s133))
[GOOD] (define-fun s135 () Int (ite s73 s82 s134))
[GOOD] (define-fun s136 () Int (ite s60 s69 s135))
[GOOD] (define-fun s137 () Int (ite s47 s56 s136))
[GOOD] (define-fun s138 () Int (ite s34 s43 s137))
[GOOD] (define-fun s139 () Int (ite s21 s30 s138))
[GOOD] (define-fun s140 () Int (ite s8 s17 s139))
[GOOD] (define-fun s141 () Int (ite s2 s3 s140))
[GOOD] (define-fun s143 () Bool (> s141 s142))
[GOOD] (define-fun s144 () Bool (not s143))
[GOOD] (define-fun s145 () Bool (< s9 s3))
[GOOD] (define-fun s146 () Bool (> s9 s142))
[GOOD] (define-fun s147 () Bool (or s145 s146))
[GOOD] (define-fun s148 () Bool (< s22 s3))
[GOOD] (define-fun s149 () Bool (> s22 s142))
[GOOD] (define-fun s150 () Bool (or s148 s149))
[GOOD] (define-fun s151 () Bool (or s147 s150))
[GOOD] (define-fun s152 () Bool (< s35 s3))
[GOOD] (define-fun s153 () Bool (> s35 s142))
[GOOD] (define-fun s154 () Bool (or s152 s153))
[GOOD] (define-fun s155 () Bool (or s151 s154))
[GOOD] (define-fun s156 () Bool (< s48 s3))
[GOOD] (define-fun s157 () Bool (> s48 s142))
[GOOD] (define-fun s158 () Bool (or s156 s157))
[GOOD] (define-fun s159 () Bool (or s155 s158))
[GOOD] (define-fun s160 () Bool (< s61 s3))
[GOOD] (define-fun s161 () Bool (> s61 s142))
[GOOD] (define-fun s162 () Bool (or s160 s161))
[GOOD] (define-fun s163 () Bool (or s159 s162))
[GOOD] (define-fun s164 () Bool (< s74 s3))
[GOOD] (define-fun s165 () Bool (> s74 s142))
[GOOD] (define-fun s166 () Bool (or s164 s165))
[GOOD] (define-fun s167 () Bool (or s163 s166))
[GOOD] (define-fun s168 () Bool (< s87 s3))
[GOOD] (define-fun s169 () Bool (> s87 s142))
[GOOD] (define-fun s170 () Bool (or s168 s169))
[GOOD] (define-fun s171 () Bool (or s167 s170))
[GOOD] (define-fun s172 () Bool (< s100 s3))
[GOOD] (define-fun s173 () Bool (> s100 s142))
[GOOD] (define-fun s174 () Bool (or s172 s173))
[GOOD] (define-fun s175 () Bool (or s171 s174))
[GOOD] (define-fun s176 () Bool (< s113 s3))
[GOOD] (define-fun s177 () Bool (> s113 s142))
[GOOD] (define-fun s178 () Bool (or s176 s177))
[GOOD] (define-fun s179 () Bool (or s175 s178))
[GOOD] (define-fun s180 () Bool (< s122 s3))
[GOOD] (define-fun s181 () Bool (> s122 s142))
[GOOD] (define-fun s182 () Bool (or s180 s181))
[GOOD] (define-fun s183 () Bool (or s179 s182))
[GOOD] (define-fun s184 () Bool (ite s112 s179 s183))
[GOOD] (define-fun s185 () Bool (ite s99 s175 s184))
[GOOD] (define-fun s186 () Bool (ite s86 s171 s185))
[GOOD] (define-fun s187 () Bool (ite s73 s167 s186))
[GOOD] (define-fun s188 () Bool (ite s60 s163 s187))
[GOOD] (define-fun s189 () Bool (ite s47 s159 s188))
[GOOD] (define-fun s190 () Bool (ite s34 s155 s189))
[GOOD] (define-fun s191 () Bool (ite s21 s151 s190))
[GOOD] (define-fun s192 () Bool (ite s8 s147 s191))
[GOOD] (define-fun s193 () Bool (not s2))
[GOOD] (define-fun s194 () Bool (and s192 s193))
[GOOD] (define-fun s195 () Bool (or s144 s194))
[GOOD] (assert s15)
[GOOD] (assert s28)
[GOOD] (assert s41)
[GOOD] (assert s54)
[GOOD] (assert s67)
[GOOD] (assert s80)
[GOOD] (assert s93)
[GOOD] (assert s106)
[GOOD] (assert s119)
[GOOD] (assert s129)
[GOOD] (assert s195)
[SEND] (check-sat)
[RECV] sat
*** Solver   : Z3
*** Exit code: ExitSuccess
