== BEGIN: "Makefile" ================
# Makefile for crcUSB5. Automatically generated by SBV. Do not edit!

# include any user-defined .mk file in the current directory.
-include *.mk

CC?=gcc
CCFLAGS?=-Wall -O3 -DNDEBUG -fomit-frame-pointer

all: crcUSB5_driver

crcUSB5.o: crcUSB5.c crcUSB5.h
	${CC} ${CCFLAGS} -c $< -o $@

crcUSB5_driver.o: crcUSB5_driver.c
	${CC} ${CCFLAGS} -c $< -o $@

crcUSB5_driver: crcUSB5.o crcUSB5_driver.o
	${CC} ${CCFLAGS} $^ -o $@

clean:
	rm -f *.o

veryclean: clean
	rm -f crcUSB5_driver
== END: "Makefile" ==================
== BEGIN: "crcUSB5.h" ================
/* Header file for crcUSB5. Automatically generated by SBV. Do not edit! */

#ifndef __crcUSB5__HEADER_INCLUDED__
#define __crcUSB5__HEADER_INCLUDED__

#include <stdio.h>
#include <stdlib.h>
#include <inttypes.h>
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <math.h>

/* The boolean type */
typedef bool SBool;

/* The float type */
typedef float SFloat;

/* The double type */
typedef double SDouble;

/* Unsigned bit-vectors */
typedef uint8_t  SWord8 ;
typedef uint16_t SWord16;
typedef uint32_t SWord32;
typedef uint64_t SWord64;

/* Signed bit-vectors */
typedef int8_t  SInt8 ;
typedef int16_t SInt16;
typedef int32_t SInt32;
typedef int64_t SInt64;

/* Entry point prototype: */
SWord16 crcUSB5(const SWord16 msg);

#endif /* __crcUSB5__HEADER_INCLUDED__ */
== END: "crcUSB5.h" ==================
== BEGIN: "crcUSB5_driver.c" ================
/* Example driver program for crcUSB5. */
/* Automatically generated by SBV. Edit as you see fit! */

#include <stdio.h>
#include "crcUSB5.h"

int main(void)
{
  const SWord16 __result = crcUSB5(0xfedcU);

  printf("crcUSB5(0xfedcU) = 0x%04"PRIx16"U\n", __result);

  return 0;
}
== END: "crcUSB5_driver.c" ==================
== BEGIN: "crcUSB5.c" ================
/* File: "crcUSB5.c". Automatically generated by SBV. Do not edit! */

#include "crcUSB5.h"

SWord16 crcUSB5(const SWord16 msg)
{
  const SWord16 s0 = msg;
  const SBool   s1 = (SBool) ((s0 >> 10) & 1);
  const SBool   s3 = s1 != false;
  const SBool   s4 = (SBool) ((s0 >> 9) & 1);
  const SBool   s5 = false != s4;
  const SBool   s6 = (SBool) ((s0 >> 8) & 1);
  const SBool   s7 = false != s6;
  const SBool   s8 = (SBool) ((s0 >> 7) & 1);
  const SBool   s9 = false != s8;
  const SBool   s10 = (SBool) ((s0 >> 6) & 1);
  const SBool   s11 = false != s10;
  const SBool   s12 = (SBool) ((s0 >> 5) & 1);
  const SBool   s13 = false != s12;
  const SBool   s14 = (SBool) ((s0 >> 4) & 1);
  const SBool   s15 = false != s14;
  const SBool   s16 = (SBool) ((s0 >> 3) & 1);
  const SBool   s17 = false != s16;
  const SBool   s18 = (SBool) ((s0 >> 2) & 1);
  const SBool   s19 = false != s18;
  const SBool   s20 = (SBool) ((s0 >> 1) & 1);
  const SBool   s21 = false != s20;
  const SBool   s22 = (SBool) ((s0 >> 0) & 1);
  const SBool   s23 = false != s22;
  const SBool   s24 = !s9;
  const SBool   s25 = s3 ? s24 : s9;
  const SBool   s26 = !s11;
  const SBool   s27 = s5 ? s26 : s11;
  const SBool   s28 = !s13;
  const SBool   s29 = s3 ? s28 : s13;
  const SBool   s30 = !s29;
  const SBool   s31 = s7 ? s30 : s29;
  const SBool   s32 = !s15;
  const SBool   s33 = s5 ? s32 : s15;
  const SBool   s34 = !s33;
  const SBool   s35 = s25 ? s34 : s33;
  const SBool   s36 = !s17;
  const SBool   s37 = s7 ? s36 : s17;
  const SBool   s38 = !s37;
  const SBool   s39 = s27 ? s38 : s37;
  const SBool   s40 = !s19;
  const SBool   s41 = s25 ? s40 : s19;
  const SBool   s42 = !s41;
  const SBool   s43 = s31 ? s42 : s41;
  const SBool   s44 = !s21;
  const SBool   s45 = s27 ? s44 : s21;
  const SBool   s46 = !s45;
  const SBool   s47 = s35 ? s46 : s45;
  const SBool   s48 = !s23;
  const SBool   s49 = s31 ? s48 : s23;
  const SBool   s50 = !s49;
  const SBool   s51 = s39 ? s50 : s49;
  const SBool   s52 = !s35;
  const SBool   s53 = s43 ? s52 : s35;
  const SBool   s54 = !s39;
  const SBool   s55 = s47 ? s54 : s39;
  const SBool   s56 = !s43;
  const SBool   s57 = s51 ? s56 : s43;
  const SWord16 s60 = s51 ? 0x0001U : 0x0000U;
  const SWord16 s62 = s60 | 0x0002U;
  const SWord16 s63 = s47 ? s62 : s60;
  const SWord16 s65 = s63 | 0x0004U;
  const SWord16 s66 = s57 ? s65 : s63;
  const SWord16 s68 = s66 | 0x0008U;
  const SWord16 s69 = s55 ? s68 : s66;
  const SWord16 s71 = s69 | 0x0010U;
  const SWord16 s72 = s53 ? s71 : s69;
  const SWord16 s74 = s72 | 0x0020U;
  const SWord16 s75 = s23 ? s74 : s72;
  const SWord16 s77 = s75 | 0x0040U;
  const SWord16 s78 = s21 ? s77 : s75;
  const SWord16 s80 = s78 | 0x0080U;
  const SWord16 s81 = s19 ? s80 : s78;
  const SWord16 s83 = s81 | 0x0100U;
  const SWord16 s84 = s17 ? s83 : s81;
  const SWord16 s86 = s84 | 0x0200U;
  const SWord16 s87 = s15 ? s86 : s84;
  const SWord16 s89 = s87 | 0x0400U;
  const SWord16 s90 = s13 ? s89 : s87;
  const SWord16 s92 = s90 | 0x0800U;
  const SWord16 s93 = s11 ? s92 : s90;
  const SWord16 s95 = s93 | 0x1000U;
  const SWord16 s96 = s9 ? s95 : s93;
  const SWord16 s98 = s96 | 0x2000U;
  const SWord16 s99 = s7 ? s98 : s96;
  const SWord16 s101 = s99 | 0x4000U;
  const SWord16 s102 = s5 ? s101 : s99;
  const SWord16 s104 = s102 | 0x8000U;
  const SWord16 s105 = s3 ? s104 : s102;

  return s105;
}
== END: "crcUSB5.c" ==================