== BEGIN: "Makefile" ================
# Makefile for crcUSB5. Automatically generated by SBV. Do not edit!

# include any user-defined .mk file in the current directory.
-include *.mk

CC=gcc
CCFLAGS?=-Wall -O3 -DNDEBUG -fomit-frame-pointer

all: crcUSB5_driver

crcUSB5.o: crcUSB5.c crcUSB5.h
	${CC} ${CCFLAGS} -c $< -o $@

crcUSB5_driver.o: crcUSB5_driver.c
	${CC} ${CCFLAGS} -c $< -o $@

crcUSB5_driver: crcUSB5.o crcUSB5_driver.o
	${CC} ${CCFLAGS} $^ -o $@

clean:
	rm -f *.o

veryclean: clean
	rm -f crcUSB5_driver
== END: "Makefile" ==================
== BEGIN: "crcUSB5.h" ================
/* Header file for crcUSB5. Automatically generated by SBV. Do not edit! */

#ifndef __crcUSB5__HEADER_INCLUDED__
#define __crcUSB5__HEADER_INCLUDED__

#include <inttypes.h>
#include <stdint.h>
#include <stdbool.h>
#include <math.h>

/* The boolean type */
typedef bool SBool;

/* The float type */
typedef float SFloat;

/* The double type */
typedef double SDouble;

/* Unsigned bit-vectors */
typedef uint8_t  SWord8 ;
typedef uint16_t SWord16;
typedef uint32_t SWord32;
typedef uint64_t SWord64;

/* Signed bit-vectors */
typedef int8_t  SInt8 ;
typedef int16_t SInt16;
typedef int32_t SInt32;
typedef int64_t SInt64;

/* Entry point prototype: */
SWord16 crcUSB5(const SWord16 msg);

#endif /* __crcUSB5__HEADER_INCLUDED__ */
== END: "crcUSB5.h" ==================
== BEGIN: "crcUSB5_driver.c" ================
/* Example driver program for crcUSB5. */
/* Automatically generated by SBV. Edit as you see fit! */

#include <inttypes.h>
#include <stdint.h>
#include <stdbool.h>
#include <math.h>
#include <stdio.h>
#include "crcUSB5.h"

int main(void)
{
  const SWord16 __result = crcUSB5(0xfedcU);

  printf("crcUSB5(0xfedcU) = 0x%04"PRIx16"U\n", __result);

  return 0;
}
== END: "crcUSB5_driver.c" ==================
== BEGIN: "crcUSB5.c" ================
/* File: "crcUSB5.c". Automatically generated by SBV. Do not edit! */

#include <inttypes.h>
#include <stdint.h>
#include <stdbool.h>
#include <math.h>
#include "crcUSB5.h"

SWord16 crcUSB5(const SWord16 msg)
{
  const SWord16 s0 = msg;
  const SWord16 s1 = s0 << 5;
  const SBool   s2 = (SBool) ((s1 >> 15) & 1);
  const SBool   s4 = s2 != false;
  const SBool   s5 = (SBool) ((s1 >> 14) & 1);
  const SBool   s6 = false != s5;
  const SBool   s7 = (SBool) ((s1 >> 13) & 1);
  const SBool   s8 = false != s7;
  const SBool   s9 = (SBool) ((s1 >> 12) & 1);
  const SBool   s10 = false != s9;
  const SBool   s11 = !s10;
  const SBool   s12 = s4 ? s11 : s10;
  const SBool   s13 = (SBool) ((s1 >> 11) & 1);
  const SBool   s14 = false != s13;
  const SBool   s15 = !s14;
  const SBool   s16 = s6 ? s15 : s14;
  const SBool   s17 = (SBool) ((s1 >> 10) & 1);
  const SBool   s18 = false != s17;
  const SBool   s19 = !s18;
  const SBool   s20 = s4 ? s19 : s18;
  const SBool   s21 = !s20;
  const SBool   s22 = s8 ? s21 : s20;
  const SBool   s23 = (SBool) ((s1 >> 9) & 1);
  const SBool   s24 = false != s23;
  const SBool   s25 = !s24;
  const SBool   s26 = s6 ? s25 : s24;
  const SBool   s27 = !s26;
  const SBool   s28 = s12 ? s27 : s26;
  const SBool   s29 = (SBool) ((s1 >> 8) & 1);
  const SBool   s30 = false != s29;
  const SBool   s31 = !s30;
  const SBool   s32 = s8 ? s31 : s30;
  const SBool   s33 = !s32;
  const SBool   s34 = s16 ? s33 : s32;
  const SBool   s35 = (SBool) ((s1 >> 7) & 1);
  const SBool   s36 = false != s35;
  const SBool   s37 = !s36;
  const SBool   s38 = s12 ? s37 : s36;
  const SBool   s39 = !s38;
  const SBool   s40 = s22 ? s39 : s38;
  const SBool   s41 = (SBool) ((s1 >> 6) & 1);
  const SBool   s42 = false != s41;
  const SBool   s43 = !s42;
  const SBool   s44 = s16 ? s43 : s42;
  const SBool   s45 = !s44;
  const SBool   s46 = s28 ? s45 : s44;
  const SBool   s47 = (SBool) ((s1 >> 5) & 1);
  const SBool   s48 = false != s47;
  const SBool   s49 = !s48;
  const SBool   s50 = s22 ? s49 : s48;
  const SBool   s51 = !s50;
  const SBool   s52 = s34 ? s51 : s50;
  const SBool   s53 = !s4;
  const SBool   s54 = s4 ? s53 : s4;
  const SBool   s55 = !s6;
  const SBool   s56 = s6 ? s55 : s6;
  const SBool   s57 = !s8;
  const SBool   s58 = s8 ? s57 : s8;
  const SBool   s59 = !s12;
  const SBool   s60 = s12 ? s59 : s12;
  const SBool   s61 = !s16;
  const SBool   s62 = s16 ? s61 : s16;
  const SBool   s63 = !s22;
  const SBool   s64 = s22 ? s63 : s22;
  const SBool   s65 = !s28;
  const SBool   s66 = s28 ? s65 : s28;
  const SBool   s67 = !s34;
  const SBool   s68 = s34 ? s67 : s34;
  const SBool   s69 = !s40;
  const SBool   s70 = s40 ? s69 : s40;
  const SBool   s71 = !s46;
  const SBool   s72 = s46 ? s71 : s46;
  const SBool   s73 = !s52;
  const SBool   s74 = s52 ? s73 : s52;
  const SBool   s75 = (SBool) ((s1 >> 4) & 1);
  const SBool   s76 = false != s75;
  const SBool   s77 = !s76;
  const SBool   s78 = s28 ? s77 : s76;
  const SBool   s79 = !s78;
  const SBool   s80 = s40 ? s79 : s78;
  const SBool   s81 = (SBool) ((s1 >> 3) & 1);
  const SBool   s82 = false != s81;
  const SBool   s83 = !s82;
  const SBool   s84 = s34 ? s83 : s82;
  const SBool   s85 = !s84;
  const SBool   s86 = s46 ? s85 : s84;
  const SBool   s87 = (SBool) ((s1 >> 2) & 1);
  const SBool   s88 = false != s87;
  const SBool   s89 = !s88;
  const SBool   s90 = s40 ? s89 : s88;
  const SBool   s91 = !s90;
  const SBool   s92 = s52 ? s91 : s90;
  const SBool   s93 = (SBool) ((s1 >> 1) & 1);
  const SBool   s94 = false != s93;
  const SBool   s95 = !s94;
  const SBool   s96 = s46 ? s95 : s94;
  const SBool   s97 = (SBool) ((s1 >> 0) & 1);
  const SBool   s98 = false != s97;
  const SBool   s99 = !s98;
  const SBool   s100 = s52 ? s99 : s98;
  const SWord16 s103 = s100 ? 0x0001U : 0x0000U;
  const SWord16 s105 = s103 | 0x0002U;
  const SWord16 s106 = s96 ? s105 : s103;
  const SWord16 s108 = s106 | 0x0004U;
  const SWord16 s109 = s92 ? s108 : s106;
  const SWord16 s111 = s109 | 0x0008U;
  const SWord16 s112 = s86 ? s111 : s109;
  const SWord16 s114 = s112 | 0x0010U;
  const SWord16 s115 = s80 ? s114 : s112;
  const SWord16 s117 = s115 | 0x0020U;
  const SWord16 s118 = s74 ? s117 : s115;
  const SWord16 s120 = s118 | 0x0040U;
  const SWord16 s121 = s72 ? s120 : s118;
  const SWord16 s123 = s121 | 0x0080U;
  const SWord16 s124 = s70 ? s123 : s121;
  const SWord16 s126 = s124 | 0x0100U;
  const SWord16 s127 = s68 ? s126 : s124;
  const SWord16 s129 = s127 | 0x0200U;
  const SWord16 s130 = s66 ? s129 : s127;
  const SWord16 s132 = s130 | 0x0400U;
  const SWord16 s133 = s64 ? s132 : s130;
  const SWord16 s135 = s133 | 0x0800U;
  const SWord16 s136 = s62 ? s135 : s133;
  const SWord16 s138 = s136 | 0x1000U;
  const SWord16 s139 = s60 ? s138 : s136;
  const SWord16 s141 = s139 | 0x2000U;
  const SWord16 s142 = s58 ? s141 : s139;
  const SWord16 s144 = s142 | 0x4000U;
  const SWord16 s145 = s56 ? s144 : s142;
  const SWord16 s147 = s145 | 0x8000U;
  const SWord16 s148 = s54 ? s147 : s145;
  const SWord16 s149 = s1 | s148;

  return s149;
}
== END: "crcUSB5.c" ==================